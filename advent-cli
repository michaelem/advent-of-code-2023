#!/usr/bin/env ruby -I lib/

require "zeitwerk"
require "thor"

loader = Zeitwerk::Loader.new
loader.push_dir("lib")
loader.setup
loader.eager_load

SOLUTIONS = {
  "1.1" => Day1::Trebuchet,
  "2.1" => Day2::CubeConundrumPart1,
  "2.2" => Day2::CubeConundrumPart2,
  "3.1" => Day3::Part1,
  "3.2" => Day3::Part2,
  "4.1" => Day4::Part1,
  "4.2" => Day4::Part2,
  "5.1" => Day5::Part1,
  "5.2" => Day5::Part2
}

class AdventCli < Thor
  option :input,
         type: :string,
         required: false,
         banner: "input/input.txt",
         desc: "the input file to use"

  option :part,
         type: :string,
         required: false,
         banner: "1 or 2",
         desc: "the part of the solution to run"

  desc "day",
       "Run a solution for a given day. For example: `advent-cli day 1` or `advent-cli day 2.1`"
  def day(day)
    begin
      input_file = options[:input] || "input/day_#{day}.txt"
      part = options[:part] || "1"
      key = "#{day}.#{part}"

      if SOLUTIONS.keys.include?(key)
        puts SOLUTIONS[key].new.run(input_file)
      else
        puts "Solution for day #{day} not implemented yet!"
      end
    end
  rescue ArgumentError => e
    puts e.message
  end
end

AdventCli.start(ARGV)
